# <h1>🧠 Aspect-Based Sentiment Analysis (ABSA) Pipeline</h1>

<h2>🌟 Overview</h2>

Traditional sentiment analysis provides a single label for an entire sentence, but real-world reviews often contain <strong>multiple sentiments targeting different aspects</strong>. ABSA offers granular insights by:

1. <strong>Extracting aspect terms</strong> (e.g., "food", "service")
2. <strong>Classifying sentiment</strong> for each aspect (positive/negative/neutral/conflict)

<h3>🎯 Example</h3>
<blockquote>
<i>"The food was excellent, but the service was disappointing."</i><br>
→ <code>food</code> → ⭐️ <strong>positive</strong><br>
→ <code>service</code> → ❌ <strong>negative</strong>
</blockquote>

---

<h2>🏗️ Project Structure</h2>

```text
ABSA-Pipeline/
├── Task1/                       # Aspect Term Extraction (ATE)
│   ├── train.json               # Training data
│   ├── test.json                # Test data
│   ├── val.json                 # Validation data
│   ├── vocab_task1.json         # Vocabulary
│   └── Aspect Term Extraction.ipynb  # Implementation notebook
│
└── Task2/                       # Aspect Sentiment Classification (ASC)
    ├── train_task2.json         # Training data
    ├── test_task2.json          # Test data
    ├── val_task2.json           # Validation data
    ├── vocab_task2.json         # Vocabulary
    └── Aspect Based Sentiment Analysis.ipynb  # Implementation notebook
    <h2>🔍 Task 1: Aspect Term Extraction (ATE)</h2><h3>✅ Objective</h3> Identify exact spans representing opinion targets in text.<h3>🧠 Model Architecture</h3>
<h4>Component</h4>	<h4>Specification</h4>
Architecture	Bi-GRU / RNN
Embeddings	GloVe (300D) / fastText
Tagging Scheme	BIO (Beginning-Inside-Outside)
Loss Function	CrossEntropyLoss (with masking)
Evaluation Metric	Chunk-level F1 (<code>conlleval</code>)
<h3>🏆 Performance</h3>
<h4>Model</h4>	<h4>Validation F1</h4>	<h4>Test F1 (Best)</h4>
GRU + fastText	0.7165	⭐️ <strong>0.7132</strong>
GRU + GloVe	0.7092	
RNN + fastText	0.7013	
RNN + GloVe	0.7000	
<h2>💬 Task 2: Aspect Sentiment Classification (ASC)</h2><h3>✅ Objective</h3> Predict sentiment polarity for each extracted aspect term.<h3>🧠 Model Architecture</h3>
<h4>Component</h4>	<h4>Specification</h4>
Architecture	Bi-LSTM with Aspect-Specific Attention
Embeddings	GloVe (300D)
Input Format	Context + aspect indices
Attention Mechanism	Focused on relevant aspect context
Loss Function	CrossEntropyLoss
Evaluation Metric	Accuracy
<h3>🏆 Performance</h3>
<h4>Metric</h4>	<h4>Score</h4>
Validation Accuracy	0.6523
<strong>Test Accuracy</strong>	<strong>0.6250</strong>
<h2>🚀 Applications</h2> - 🍽️ <strong>Restaurant reviews</strong> - 📱 <strong>Product feature analysis</strong> - 📊 <strong>Customer feedback analytics</strong> - ...and any domain requiring fine-grained sentiment insights!
<h2>📜 License</h2> Open-source (MIT) ```